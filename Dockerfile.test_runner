# Use the same base Python image as other services for consistency
FROM python:3.12-slim

# Set environment variables to improve logging and prevent .pyc file generation
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Set the working directory in the container
WORKDIR /app

# Copy requirements.txt first to leverage Docker's build cache
COPY requirements.txt .

# Install Python dependencies
# This assumes pytest and any other testing libraries are in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code into the container
# Ensure you have a .dockerignore file to exclude .venv, .pytest_cache, __pycache__, etc.
COPY . .

# Make the main test suite script executable
RUN chmod +x ./tests/test_suite/run_test_suite_using_sh.sh

# Grant execute permissions to all .sh files within the tests directory and its subdirectories
RUN find ./tests -type f -name '*.sh' -exec chmod +x {} \;

# Also ensure any scripts it might call are executable if needed
# RUN chmod +x ./another_script_called_by_tests.sh

# No specific ENTRYPOINT or CMD is needed here, as the 'command'
# in docker-compose.yml will specify what to run. 